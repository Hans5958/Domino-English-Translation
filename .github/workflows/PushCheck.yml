on: push

name: Push Check

jobs:
  deploy:
    name: Deployment
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      # - name: Calculate depth
      #   id: depth
      #   run: |
      #     echo DEPTH=$(($(echo '${{toJSON(github.event.commits)}}' | jq '. | length') + 1))
      #     echo ::set-output name=DEPTH::$(($(echo '${{toJSON(github.event.commits)}}' | jq '. | length') + 1))
      - name: Checkout code
        uses: actions/checkout@v2
      #   with:
      #     fetch-depth: ${{steps.depth.outputs.DEPTH}}
      # - name: Check changes
      #   run: |
      #     git diff --name-only $(echo ${{github.event.compare}} | grep -oE '([a-z0-9]+\.\.\.[a-z0-9]+)')
      #     if ! git diff --name-only $(echo ${{github.event.compare}} | grep -oE '([a-z0-9]+\.\.\.[a-z0-9]+)') | grep -E '^((Dialog)|(Manual)|(Menu)|(Module)|(Other)|(StringTable)|(System)|(VersionInfo)\/)'; then
      #       echo "No files translated. Stopping!"
      #       exit 1
      #     else
      #       echo "Some files translated. Continuing."
      #     fi
      - name: Set enviroment variables
        run: |
          echo BUILD_DATE="$(date +%Y%m%d)"
          echo BUILD_DATE_TIDY="$(date +'%Y/%m/%d')"
          echo BUILD_DATE_FULL="$(date +'%Y/%m/%d %H:%M:%S')"
          echo VERSION_NUM="$(cat version.txt)"
          echo ::set-env name=BUILD_DATE::"$(date +%Y%m%d)"
          echo ::set-env name=BUILD_DATE_TIDY::"$(date +'%Y/%m/%d')"
          echo ::set-env name=BUILD_DATE_FULL::"$(date +'%Y/%m/%d %H:%M:%S')"
          echo ::set-env name=VERSION_NUM::"$(cat version.txt)"
      - name: Set version on executable
        run: |
          cd VersionInfo
          sed -i '2s/.*/FILEVERSION 1,43,${{env.VERSION_NUM}},0/' 1.rc
          sed -i '3s/.*/PRODUCTVERSION 1,43,${{env.VERSION_NUM}},0/' 1.rc
          sed -i '12s/.*/		VALUE "FileVersion", "1.43-${{env.VERSION_NUM}}-artifact.${{env.BUILD_DATE}}"/' 1.rc
          sed -i '17s/.*/		VALUE "ProductVersion", "1.43-${{env.VERSION_NUM}}-artifact.${{env.BUILD_DATE}}"/' 1.rc
      - name: Install Resource Hacker
        run: choco install reshack
      - name: Build (part 1, powershell)
        shell: powershell
        run: |
          7z x -r Domino143.7z -oc:\_compile
          cd _compile
          echo "[FILENAMES] 
          Exe=  Domino.exe 
          SaveAs= Domino.exe 
          Log=  CON 
          [COMMANDS] 
          -delete  MENU,, 
          -delete  DIALOG,, 
          -delete  STRINGTABLE,, 
          -delete  VERSIONINFO,, 
          -add   Menu.res, MENU,, 
          -add   Dialog.res, DIALOG,, 
          -add   StringTable.res, STRINGTABLE,,
          -add   VersionInfo.res, VERSIONINFO,," > tmp.txt
          cat ../Dialog/* > Dialog.rc
          cat ../Menu/* > Menu.rc
          cat ../StringTable/* > StringTable.rc
          cat ../VersionInfo/* > VersionInfo.rc
          Start-Process -NoNewWindow -FilePath "C:\Program Files (x86)\Resource Hacker\ResourceHacker.exe" -ArgumentList "-open Dialog.rc", "-save Dialog.res", "-action compile", "-log CON" -Wait
          Start-Process -NoNewWindow -FilePath "C:\Program Files (x86)\Resource Hacker\ResourceHacker.exe" -ArgumentList "-open Menu.rc", "-save Menu.res", "-action compile", "-log CON" -Wait
          Start-Process -NoNewWindow -FilePath "C:\Program Files (x86)\Resource Hacker\ResourceHacker.exe" -ArgumentList "-open StringTable.rc", "-save StringTable.res -action", "compile", "-log CON" -Wait
          Start-Process -NoNewWindow -FilePath "C:\Program Files (x86)\Resource Hacker\ResourceHacker.exe" -ArgumentList "-open VersionInfo.rc", "-save VersionInfo.res -action", "compile", "-log CON" -Wait
          Start-Process -NoNewWindow -FilePath "C:\Program Files (x86)\Resource Hacker\ResourceHacker.exe" -ArgumentList "-script tmp.txt"
      - name: Build (part 2, bash)
        run: |
          cd _compile
          touch Domino.exe
          rm -rf Manual
          cp -r ../Manual .
          cp -r ../Module .
          cp -r ../System .
          cp -r ../Other/* .
          rm -rf *.rc
          rm -rf *.res
          rm -rf tmp.*
      - name: Prepare deployment
        run: |
          cd _compile
          cp ../_deploy/readme-translation.txt readme-translation.txt
          sed -i '2s/.*/Build ${{env.VERSION_NUM}}-artifact.${{env.BUILD_DATE}} (1.43-${{env.VERSION_NUM}}-artifact.${{env.BUILD_DATE}})/' readme-translation.txt
          7z a ../Domino143_Translated.zip *
          mv -v Domino.exe ../Domino_Translated.exe
      - name: Upload artifact 1
        uses: actions/upload-artifact@v1
        with:
          name: Domino143_Translated_v${{env.VERSION_NUM}}-artifact.${{env.BUILD_DATE}}.zip
          path: Domino143_Translated.zip
      - name: Upload artifact 2
        uses: actions/upload-artifact@v1
        with:
          name: Domino_Translated_v${{env.VERSION_NUM}}-artifact.${{env.BUILD_DATE}}.exe
          path: Domino_Translated.exe